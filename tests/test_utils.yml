- name: test bat exists
  command: bash -c 'HOME=$(pwd) bash -i -c "bat --version"'
  stdout:
    contains:
      - "bat"
  stderr:
    must_not_contain:
      - "No such file or directory"

- name: test bd exists
  command: bash -c 'HOME=$(pwd) bash -i -c "\bd -?"'
  stdout:
    contains:
      - "Usage: bd"
  stderr:
    must_not_contain:
      - "No such file or directory"

- name: test fd exists
  command: bash -c 'HOME=$(pwd) bash -i -c "fd --version"'
  stdout:
    contains:
      - "fd"
  stderr:
    must_not_contain:
      - "No such file or directory"

- name: test fzf exists
  command: bash -c 'HOME=$(pwd) bash -i -c "fzf --help"'
  stdout:
    contains:
      - "Usage: fzf"
  stderr:
    must_not_contain:
      - "No such file or directory"

- name: test git-extras exists
  command: bash -c 'HOME=$(pwd) bash -i -c "command -v git-extras"'
  stdout:
    contains:
      - "git-extras"
  stderr:
    must_not_contain:
      - "No such file or directory"

- name: test lazygit exists
  command: bash -c 'HOME=$(pwd) bash -i -c "command -v lazygit"'
  stdout:
    contains:
      - "lazygit"
  stderr:
    must_not_contain:
      - "No such file or directory"

- name: test node exists
  command: bash -c 'HOME=$(pwd) bash -i -c "node --help"'
  stdout:
    contains:
      - "Usage: node"
  stderr:
    must_not_contain:
      - "No such file or directory"

- name: test htop exists
  command: bash -c 'HOME=$(pwd) bash -i -c "htop --appimage-extract-and-run --version"'
  stdout:
    contains:
      - "htop"
  stderr:
    must_not_contain:
      - "No such file or directory"

- name: test nvim exists
  command: bash -c 'HOME=$(pwd) bash -i -c "nvim --version"'
  stdout:
    contains:
      - "NVIM"
  stderr:
    must_not_contain:
      - "No such file or directory"

- name: test rg exists
  command: bash -c 'HOME=$(pwd) bash -i -c "rg --version"'
  stdout:
    contains:
      - "ripgrep"
  stderr:
    must_not_contain:
      - "No such file or directory"

- name: test tinty exists
  command: bash -c 'HOME=$(pwd) bash -i -c "\tinty --version"'
  stdout:
    contains:
      - "tinty"
  stderr:
    must_not_contain:
      - "No such file or directory"

- name: test tmux exists
  command: bash -c 'HOME=$(pwd) bash -i -c "tmux --appimage-extract-and-run -V"'
  stdout:
    contains:
      - "tmux"
  stderr:
    must_not_contain:
      - "No such file or directory"

- name: test rustup exists
  command: bash -c 'HOME=$(pwd) bash -i -c "rustup --version"'
  stdout:
    contains:
      - "rustup"
  stderr:
    must_not_contain:
      - "No such file or directory"

- name: test tree-sitter exists
  command: bash -c 'HOME=$(pwd) bash -i -c "tree-sitter --version"'
  stdout:
    contains:
      - "tree-sitter"
  stderr:
    must_not_contain:
      - "No such file or directory"

- name: test java exists
  command: bash -c 'HOME=$(pwd) bash -i -c "java --version"'
  stdout:
    contains:
      - "openjdk"
  stderr:
    must_not_contain:
      - "No such file or directory"

- name: test yq exists
  command: bash -c 'HOME=$(pwd) bash -i -c "yq --version"'
  stdout:
    contains:
      - "yq"
  stderr:
    must_not_contain:
      - "No such file or directory"
