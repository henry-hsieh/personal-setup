name: Release workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
permissions:
  contents: write
  pull-requests: write

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Commit lint
        uses: wagoid/commitlint-github-action@v6

      - name: Cache docker images
        id: cache_image
        uses: ScribeMD/docker-cache@0.5.0
        with:
          key: docker-${{ runner.os }}-${{ hashFiles('src/Dockerfile') }}

      - name: Build docker image
        run: |
          if [[ "$(docker images | grep 'personal-setup')" == "" ]]; then
            make build_docker
          fi

      - name: Run tests
        id: run_test
        run: make test

      - name: Upload logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: build/logs

      - name: Upload release artifact
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.run_test.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: release-artifact
          path: build/personal-setup.tar.gz

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.test.result == 'success'

    steps:
      - name: Get token
        uses: actions/create-github-app-token@v1
        id: get_token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      - name: Create release
        id: create_release
        uses: google-github-actions/release-please-action@v4
        with:
          token: ${{ steps.get_token.outputs.token }}
          release-type: simple

      - name: Download release artifact
        id: download_release_artifact
        if: ${{ steps.create_release.outputs.release_created }}
        uses: actions/download-artifact@v4
        with:
          name: release-artifact
          path: build/

      - name: Upload release asset
        if: steps.download_release_artifact.outcome == 'success'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ steps.get_token.outputs.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/personal-setup.tar.gz
          asset_name: personal-setup-${{ steps.create_release.outputs.tag_name }}.tar.gz
          asset_content_type: application/gzip
